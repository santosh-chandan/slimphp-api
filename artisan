#!/usr/bin/env php
<?php

require __DIR__ . '/vendor/autoload.php';

use Illuminate\Database\Capsule\Manager as Capsule;
use Illuminate\Events\Dispatcher;
use Illuminate\Container\Container;
use Illuminate\Database\Migrations\DatabaseMigrationRepository;
use Illuminate\Database\Migrations\Migrator;
use Illuminate\Filesystem\Filesystem;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Output\ConsoleOutput;

// Define Laravel's database_path helper if not already defined
if (!function_exists('database_path')) {
    function database_path($path = '') {
        return __DIR__ . '/database' . ($path ? DIRECTORY_SEPARATOR . $path : $path);
    }
}

try {
    // Load DB config
    $capsule = require __DIR__ . '/config/database.php';

    // Setup IoC container and event dispatcher
    $container = new Container();
    $dispatcher = new Dispatcher($container);
    $capsule->setEventDispatcher($dispatcher);
    $capsule->setAsGlobal();
    $capsule->bootEloquent();

    // Setup Filesystem
    $filesystem = new Filesystem();

    // Setup migration repository
    $repository = new DatabaseMigrationRepository($capsule->getDatabaseManager(), 'migrations');
    if (!$repository->repositoryExists()) {
        $repository->createRepository();
    }

    // Setup migrator
    $migrator = new Migrator($repository, $capsule->getDatabaseManager(), $filesystem, $dispatcher);
    $migrator->setOutput(new ConsoleOutput());

    // Provide the path to the migrations directory
    $migrationPath = database_path('migrations');

    // Perform migrations directly using the migrator
    $migrator->run([$migrationPath]);

    echo "Migration completed successfully!" . PHP_EOL;

} catch (\Throwable $e) {
    echo "Error: " . $e->getMessage() . PHP_EOL;
    exit(1);
}
